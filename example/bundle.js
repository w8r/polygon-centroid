(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }

var _ = require("../");

var _2 = _interopRequireDefault(_);

window.centroid = _2["default"];

var geojson = {
  "type": "FeatureCollection",
  "features": [{
    "type": "Feature",
    "properties": {},
    "geometry": {
      "type": "Polygon",
      "coordinates": [[[114.12185668945312, 22.16260652987034], [114.0926742553711, 22.200120453710106], [114.08409118652344, 22.260185429990354], [114.1091537475586, 22.326258904214864], [114.15447235107422, 22.338009084246355], [114.33265686035156, 22.328481987166487], [114.38072204589844, 22.303073214469702], [114.3947982788086, 22.23095066682715], [114.39136505126952, 22.17405251724245], [114.3683624267578, 22.1447998093326], [114.34741973876953, 22.1447998093326], [114.37660217285156, 22.190583964901077], [114.38037872314453, 22.221416273101312], [114.37625885009764, 22.246522115329117], [114.37007904052734, 22.285919679279534], [114.32647705078125, 22.31927184148404], [114.20494079589842, 22.321177438742005], [114.1373062133789, 22.321812632045795], [114.11155700683594, 22.285919679279534], [114.10160064697266, 22.246204347963577], [114.11911010742186, 22.19185553415808], [114.13627624511719, 22.179139323652443], [114.14108276367188, 22.156565216533245], [114.06246185302734, 22.145117806241657], [113.9725112915039, 22.25605480105108], [114.00615692138672, 22.30180265445003], [114.04254913330078, 22.30148501263934], [113.9834976196289, 22.260185429990354], [114.06486511230469, 22.161334695990796], [114.12185668945312, 22.16260652987034]]]
    }
  }]
};

var map = L.map('map').setView([22.32258, 114.1952], 10);
L.tileLayer('http://{s}.tile.osm.org/{z}/{x}/{y}.png', {
  attribution: '&copy; <a href="http://osm.org/copyright">OpenStreetMap</a> contributors'
}).addTo(map);

var gj = L.geoJson(geojson).addTo(map);
L.marker((0, _2["default"])(geojson.features[0].geometry.coordinates[0]).reverse()).addTo(map);

},{"../":2}],2:[function(require,module,exports){
/**
 * @preserve Exercise 12, p.47
 * Computational Geometry in C.
 * http://cs.smith.edu/~orourke/
 */

/**
 * Is polygon ccw
 * @param {Array.<Array.<Number>>} p
 * @return {Boolean}
 */
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = centroid;
function ccw(p) {
  var sum = 0;
  var len = p.length;
  var open = p[0][0] !== p[len - 1][0] || p[0][1] !== p[len - 1][1];

  if (open) p.push(p[0]);
  for (var i = 1; i < len; i++) {
    sum += (p[i][0] - p[i - 1][0]) * (p[i][1] + p[i - 1][1]);
  }
  if (open) p.pop();

  return sum <= 0;
}

/**
 * Returns twice the signed area of the triangle determined by a,b,c,
 * positive if a, b, c are oriented ccw, and negative if cw.
 *
 * @param {Array.<Number>} a
 * @param {Array.<Number>} b
 * @param {Array.<Number>} c
 * @return {Number}
 */
function area2(a, b, c) {
  return (b[0] - a[0]) * (c[1] - a[1]) - (c[0] - a[0]) * (b[1] - a[1]);
}

/**
 * Returns three times the centroid.  The factor of 3 is
 * left in to permit division to be avoided until later.
 * @param {Array.<Number>} p1
 * @param {Array.<Number>} p2
 * @param {Array.<Number>} p3
 * @return {Array.<Number>}
 */
function centroid3(p1, p2, p3) {
  return [p1[0] + p2[0] + p3[0], p1[1] + p2[1] + p3[1]];
}

/**
 * Returns the cg in CG.  Computes the weighted sum of
 * each triangle's area times its centroid.  Twice area
 * and three times centroid is used to avoid division
 * until the last moment.
 *
 * @param {Array.<Array.<Number>>}
 */

function centroid(P) {
  if (!ccw(P)) P = P.slice().reverse();
  var A2 = undefined,
      areasum2 = 0; /* Partial area sum */
  var CG = [0, 0];

  for (var i = 1, len = P.length; i < len - 1; i++) {
    var cent3 = centroid3(P[0], P[i], P[i + 1]);
    A2 = area2(P[0], P[i], P[i + 1]);
    CG[0] += A2 * cent3[0];
    CG[1] += A2 * cent3[1];
    areasum2 += A2;
  }

  CG[0] /= 3 * areasum2;
  CG[1] /= 3 * areasum2;

  return CG;
}

module.exports = exports["default"];

},{}]},{},[1])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
